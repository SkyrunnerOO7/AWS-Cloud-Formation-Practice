Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName

Mappings: 
  AmiRegionMap: 
    us-east-1: 
      AMI: "ami-00c39f71452c08778"
    us-east-2: 
      AMI: "ami-02f97949d306b597a"
    us-west-1: 
      AMI: "ami-07bc04fdc13241142"
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Metadata:
     AWS::CloudFormation::Init:
      config:
        packages:
          yum:
            php: []
            httpd: []
            wget: []
            unzip: []
            git: []
        commands:
          test:
            command: "wget https://www.tooplate.com/zip-templates/2102_constructive.zip && unzip 2102_constructive.zip && cp -r 2102_constructive/* /var/www/html/"
        files:
          /var/www/html/hello.html:
            content: !Sub |
              <!DOCTYPE html>
              <html lang="en">
              <head>
                <meta charset="UTF-8">
                <meta http-equiv="X-UA-Compatible" content="IE=edge">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Document</title>
              </head>
              <body>
                <h1>Welcome to CloudFormation.</h1>
                <p>This site is deployed by CloudFormation</p>

                </body>
              </html>
        services:
          sysvinit:
            httpd:
              enabled: true
              ensureRunning: true
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref DemoSecurityGroup
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cnf-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}

  DemoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh to MYIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName